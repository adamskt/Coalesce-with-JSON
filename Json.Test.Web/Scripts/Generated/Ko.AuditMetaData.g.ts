
/// <reference path="../coalesce.dependencies.d.ts" />

// Generated by IntelliTect.Coalesce

module ViewModels {
    
    /** External Type AuditMetaData */
    export class AuditMetaData {
        public parent: any;
        public parentCollection: any;
        
        // Observables
        public question1: KnockoutObservable<string | null> = ko.observable(null);
        public question2: KnockoutObservable<string | null> = ko.observable(null);
        public question3: KnockoutObservable<string | null> = ko.observable(null);
        public question4: KnockoutObservable<string | null> = ko.observable(null);
        
        /** 
            Load the object from the DTO.
            @param data: The incoming data object to load.
        */
        public loadFromDto = (data: any) => {
            if (!data) return;
            
            // Load the properties.
            this.question1(data.question1);
            this.question2(data.question2);
            this.question3(data.question3);
            this.question4(data.question4);
            
        };
        
        /** Saves this object into a data transfer object to send to the server. */
        public saveToDto = (): any => {
            var dto: any = {};
            
            dto.question1 = this.question1();
            dto.question2 = this.question2();
            dto.question3 = this.question3();
            dto.question4 = this.question4();
            
            return dto;
        }
        
        constructor(newItem?: any, parent?: any) {
            this.parent = parent;
            
            if (newItem) {
                this.loadFromDto(newItem);
            }
        }
    }
}
